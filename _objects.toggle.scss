////
/// PX-TOGGLE-DESIGN
/// Defines simple toggle objects
/// @group px-toggle-design
////

@import 'px-defaults-design/_settings.defaults.scss';
@import 'px-colors-design/_settings.colors.scss';
@import 'px-helpers-design/_generic.helpers.scss';

/// Sets a prepended namespace for all generated classes.
///
/// @group px-toggle-design:variables:style
/// @type String [default]
$inuit-toggle-namespace         : $inuit-namespace !default;

/// Sets the toggle switch color.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-switch            : var(--px-toggle-switch-color, $white);

/// Sets the toggle switch color on hover.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-switch--hover      : var(--px-toggle-switch-color-hover, $gray4);

/// Sets the toggle switch color on pressed.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-switch--pressed    : var(--px-toggle-switch-color-pressed, $gray7);

/// Sets the toggle switch border color.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-switch-border     : var(--px-toggle-switch-border-color, $gray8);

/// Sets the toggle switch shadow color.
///
/// @group px-toggle-design:variables:style
/// @type Color | String [default]
$inuit-toggle-switch-shadow     : 0px 1px 2px var(--px-toggle-switch-shadow-color, rgba($black, .15));

/// Sets the toggle background color. This color is in use when the toggle is off/deactivated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-background        : var(--px-toggle-backgound-color-off, $gray3);

/// Sets the toggle border color. This color is in use when the toggle is off/deactivated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-border            : var(--px-toggle-border-color-off, $gray8);

/// Sets the toggle background color. This color is in use when the toggle is on/activated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]]
$inuit-toggle-background-on    : var(--px-toggle-background-color-on, $primary-default);

/// Sets the toggle border color. This color is in use when the toggle is on/activated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]]
$inuit-toggle-border-on    : var(--px-toggle-border-color-on, $primary-default);

/// Sets the toggle background color on hover. This color is in use when the toggle is on/activated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]]
$inuit-toggle-background-on--hover    : var(--px-toggle-background-color-on-hover, $primary-hover);

/// Sets the toggle background color on pressed. This color is in use when the toggle is on/activated.
///
/// @group px-toggle-design:variables:style
/// @type Color [default]]
$inuit-toggle-background-on--pressed    : var(--px-toggle-background-color-on-pressed, $primary-pressed);

/// Disabled background color
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-disabled-background    : var(--px-toggle-disabled-background, $white);

/// Disabled checked background color
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-checked-disabled-background    : var(--px-toggle-checked-disabled-background, $gray4);

/// Disabled border color
/// @group px-toggle-design:variables:style
/// @type Color [default]
$inuit-toggle-disabled-border-color    : var(--px-toggle-disabled-border-color, $gray4);

/// Generates the CSS for small toggles if enabled.
///
/// @group px-toggle-design:variables:flag
/// @type Boolean [default]
$inuit-enable-toggle--small     : false !default;

/// Generates the CSS for large toggles if enabled.
///
/// @group px-toggle-design:variables:flag
/// @type Boolean [default]
$inuit-enable-toggle--large     : false !default;

/// Generates the CSS for huge toggles if enabled.
///
/// @group px-toggle-design:variables:flag
/// @type Boolean [default]
$inuit-enable-toggle--huge      : false !default;

/// Generates the CSS for disabled toggles if enabled.
///
/// @group px-toggle-design:variables:flag
/// @type Boolean [default]
$inuit-enable-toggle--disabled   : false !default;

/**
 * Default toggle
 */
.#{$inuit-toggle-namespace}toggle__input,
%#{$inuit-toggle-namespace}toggle__input {
  @include accessibility;
  &:checked + {
    .#{$inuit-toggle-namespace}toggle__label,
    %#{$inuit-toggle-namespace}toggle__label {
      background-color: $inuit-toggle-border-on;
      &:before {
        background-color: $inuit-toggle-background-on;
      }
      &:hover:before{
        background-color: $inuit-toggle-background-on--hover;
      }
      &:hover {
        background-color:$inuit-toggle-background-on--hover;
      }
      &:active:before {
        background-color: $inuit-toggle-background-on--pressed;
      }
      &:active {
        background-color: $inuit-toggle-background-on--pressed;
      }
      &:after {
        margin-left: 1.467rem //22px
      }
    }
  }
}

.#{$inuit-toggle-namespace}toggle__label,
%#{$inuit-toggle-namespace}toggle__label {
  position: relative;
  display: block;
  width: $inuit-base-spacing-unit--large * 2;
  min-width: $inuit-base-spacing-unit--large * 2;
  height: calc(#{$inuit-base-spacing-unit} - 1px);
  border-radius: $inuit-base-spacing-unit--huge;
  padding: 1px;
  cursor: pointer;
  outline: none;
  user-select: none;
  transition: background .4s;
  background-color: $inuit-toggle-border;
  text-indent: -9999rem;
  &:before, &:after {
    position: absolute;
    display: block;
    content: "";
  }
  &:before {
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
    border-radius: $inuit-base-spacing-unit--huge;
    transition: background .4s;
    background-color: $inuit-toggle-background;
  }
  &:after {
    top: -3px;
    left: -1px;
    height: $inuit-base-spacing-unit--large;
    width: $inuit-base-spacing-unit--large;
    border: 1px solid $inuit-toggle-switch-border;
    border-radius: $inuit-base-spacing-unit--huge;
    box-shadow: $inuit-toggle-switch-shadow;
    background-color: $inuit-toggle-switch;
    transition: margin .4s, background .4s, border-color .4s;
  }
  &:hover:after {
    background-color: $inuit-toggle-switch--hover;
  }
  &:active:after {
    background-color: $inuit-toggle-switch--pressed;
  }
}

/**
  * Disabled toggle
  */
@if ($inuit-enable-toggle--disabled == true) {

  .#{$inuit-toggle-namespace}toggle__input,
  %#{$inuit-toggle-namespace}toggle__input {
    &:checked + {
      .#{$inuit-toggle-namespace}toggle--disabled,
      %#{$inuit-toggle-namespace}toggle--disabled
      .toggle__label[disabled] {
        background-color: $inuit-toggle-checked-disabled-background;
        &:before {
          background-color: $inuit-toggle-checked-disabled-background;
        }
        &:after {
          box-shadow: none;
        }
      }
    }
  }
  .#{$inuit-toggle-namespace}toggle--disabled,
  %#{$inuit-toggle-namespace}toggle--disabled,
  .toggle__label[disabled] {
    background-color: $inuit-toggle-disabled-border-color;
    pointer-events: none;
    &:before {
      background-color: $inuit-toggle-disabled-background;
      box-shadow: none;
    }
    &:after {
      box-shadow: none;
      border: 1px solid $inuit-toggle-disabled-border-color;
    }
  }
}

/**
  * Small toggle
  */
@if ($inuit-enable-toggle--small == true) {

  .#{$inuit-toggle-namespace}toggle__input--small,
  %#{$inuit-toggle-namespace}toggle__input--small {
    &:checked + {
      .#{$inuit-toggle-namespace}toggle__label--small,
      %#{$inuit-toggle-namespace}toggle__label--small {
        &:after {
          margin-left: $inuit-base-spacing-unit;
        }
      }
    }
  }
  .#{$inuit-toggle-namespace}toggle__label--small,
  %#{$inuit-toggle-namespace}toggle__label--small {
    width: $inuit-base-spacing-unit--huge;
    min-width: $inuit-base-spacing-unit--huge;
    height: calc(#{$inuit-base-spacing-unit--small} + 1px);
    &:after {
      top: -2px;
      left: 0px;
      height: $inuit-base-spacing-unit;
      width: $inuit-base-spacing-unit;
    }
  }

}



/**
  * Large toggle
  */
@if ($inuit-enable-toggle--large == true) {

  .#{$inuit-toggle-namespace}toggle__input--large,
  %#{$inuit-toggle-namespace}toggle__input--large {
    &:checked + {
      .#{$inuit-toggle-namespace}toggle__label--large,
      %#{$inuit-toggle-namespace}toggle__label--large {
        &:after {
          margin-left: 2.133rem; //32px
        }
      }
    }
  }
  .#{$inuit-toggle-namespace}toggle__label--large,
  %#{$inuit-toggle-namespace}toggle__label--large {
    width: $inuit-base-spacing-unit--huge * 2;
    min-width: $inuit-base-spacing-unit--huge * 2;
    height: $inuit-base-spacing-unit--large;
    &:after {
      top: calculateRem(-5px);
      left: calculateRem(-1px);
      height: $inuit-base-spacing-unit--huge;
      width: $inuit-base-spacing-unit--huge;
    }
  }

}



/**
  * Huge toggle
  */
@if ($inuit-enable-toggle--huge == true) {

  .#{$inuit-toggle-namespace}toggle__input--huge,
  %#{$inuit-toggle-namespace}toggle__input--huge {
    &:checked + {
      .#{$inuit-toggle-namespace}toggle__label--huge,
      %#{$inuit-toggle-namespace}toggle__label--huge {
        &:after {
          margin-left: 2.8rem //42px
        }
      }
    }
  }
  .#{$inuit-toggle-namespace}toggle__label--huge,
  %#{$inuit-toggle-namespace}toggle__label--huge {
    width: $inuit-base-spacing-unit--large * 4;
    min-width: $inuit-base-spacing-unit--large * 4;
    height: $inuit-base-spacing-unit--huge;
    &:before {
    }
    &:after {
      top: calculateRem(-5px);
      left: calculateRem(-1px);
      height: calc(#{$inuit-base-spacing-unit--large * 2});
      width: calc(#{$inuit-base-spacing-unit--large * 2});
    }
  }

}
